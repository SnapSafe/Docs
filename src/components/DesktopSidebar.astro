---
type Props = {
  sidebar: Record<string, { title: string; slug: string }[]>;
};

const { sidebar } = Astro.props;
---

<script>
  const currentLink = document.getElementById(
    "desktop-" +
      window.location.pathname.split("/docs/")[1]!.replaceAll("/", "")
  );

  if (currentLink) {
    currentLink.classList.add("bg-primary/10", "text-primary");
    currentLink.classList.remove("hover:bg-primary/10");
  }
</script>

<div
  class="hidden top-24 bottom-0 left-0 lg:fixed lg:z-50 lg:flex w-72 flex-col"
>
  <div class="flex grow flex-col gap-y-3 overflow-y-auto px-6">
    <nav class="flex flex-1 flex-col">
      <ul role="list" class="flex flex-1 flex-col gap-y-7 list-none">
        <li>
          <ul role="list" class="space-y-5 list-none">
            {
              Object.entries(sidebar).map((v) => {
                return (
                  <li>
                    <div class="font-medium text-lg border-b border-b-gray-300">
                      {v[0]}
                    </div>
                    <ul role="list" class="mt-1.5 space-y-1 list-none">
                      {v[1].map((item) => {
                        return (
                          <li>
                            <a
                              id={`desktop-${item.slug}`}
                              href={`/docs/${item.slug}`}
                              class="flex leading-6 font-medium px-2 py-1 hover:bg-primary/10 rounded-lg"
                            >
                              {item.title}
                            </a>
                          </li>
                        );
                      })}
                    </ul>
                  </li>
                );
              })
            }
          </ul>
        </li>
      </ul>
    </nav>
  </div>
</div>
